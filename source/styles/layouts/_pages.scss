.home {
	// overflow: hidden;
	// height: 100vh;
	&-page {
		padding-top: 100vh;
	}
	.logo, .btn-menu {
		position: fixed;
	}
	&-title {
		font-size: vmin(72px);
		color: $w;
		line-height: percentage(78px/72px);
		text-align: center;
		font-weight: normal;
		margin: auto;
		transition: $speed transform, $speed opacity;
		.scrolled & {
			transform: translate3d(0, 0%, 0);
			opacity: 0;
		}
		&-row {
			display: inline-block;
			overflow: hidden;
			position: relative;
		}
		&-sentence {
			transition: transform $speed $speed;
			color: $w !important;
			display: inline-block;
			transform: translate3d(0%, -120%, 0) skewY(2deg);
			.wf-active &, .wf-inactive & {
				transform: translate3d(0%, 0%, 0) skewY(0deg);
			}
			.wf-loading & {
				transform: translate3d(0%, -120%, 0) skewY(2deg);
			}
		}
		a {
			font-weight: bold;
			@extend %subline;
		}
	}
	&-container {
		height: 100vh;
		display: flex;
		flex-direction: column;
		position: relative;
		z-index: 10;
		transition: $speed transform, box-shadow $speed/2;
		box-shadow: 0px -5px 30px 0px transparentize($b, .6);
		.carousel {
			flex: 20;
			display: flex;
			&-container, &-wrapper {
				flex: 0 0 auto;
			}
			&-container {
				width: $f;
				display: flex;
			}
		}
		.up {
			position: absolute;
			top: em(40px);
    		min-height: em(40px);
    		min-width: em(40px);
    		left: 50%;
    		margin-left: em(20px)*-1;
    		z-index: 3;
		}
	}
	.page-header {
		position: fixed;
		top: 0;
		width: $f;
		left: 0;
		min-height: 0;
		height: 100vh;
		align-items: center;
		flex-direction: row;
		justify-content: center;
		padding-top: em(100px);
		padding-bottom: em(100px);
		@include normalize_padding;
		.btn {
			position: absolute;
			bottom: 10px;
			left: 50%;
			transform: translate3d(-50%, 0, 0);
			width: em(80px);
			height: em(80px);
			line-height: em(80px);
			.icon-scroll-mouse {
				vertical-align: middle;
				font-size: em(40px);
				position: relative;
				top: em(2px, 40px)*-1;
			}
		}
		.gradient {
			@include fullGradientAnim();
		}
	}
}

.case {
	&s {
		.type-lavori {
			transition: $speed background-color;
			&:hover {
				background-color: $anthracite;
			}
		}
	}
	&-svg {
		max-width: em(320px);
        path, rect, circle, polygon, [class^="st"], [class*=" st"] {
            transition: $speed fill;
            fill: $gray !important;
            .type-lavori:hover & {
            	fill: $w !important;
            }
        }
	}
}

.method {
	@include normalize_padding;
	&-container {
		height: 100vh;
		position: relative;
	}
	&-svg {
		@include absfull;
		overflow: visible !important;
		.button {
			circle {
				transition: $speed;
			}
			.grey {
				stroke: transparent;
			}
			text {
				font-family: $main-font;
				font-size: em(22px);
				text-transform: uppercase;
				fill: #999;
				transition: $speed fill;
				font-weight: bold;
			}
			&:hover {
				.grey, .purple-small {
					fill: #a6a6a6 !important;
				}
				text {
					fill: $violet;
				}
			}
		}
		.active {
			.grey {
				r: 34px !important;
				stroke: #fff;
				transition-delay: $speed;
			}
			.white {
				r: 28px !important;
				transition-delay: $speed;
			}
			.purple-small {
				transition: $speed r;
				r: 10px !important;
			}
			.purple-large {
				transition: $speed r $speed;
				r: 19px !important;
			}
			text {
				fill: $violet;
			}
		}
	}
	&-list {
		&-item {
			list-style-type: none;
		}
	}
	&-title {
		font-size: em(30px);
		color: $purple;
		@include breakpoint($bp) {
			display: none;
		}
	}
	&-description {
		p {
			font-size: em(18px);
			line-height: percentage(36px/22px);
			@include breakpoint($bp) {
				font-size: vmin(22px);
			}
		}
		@include breakpoint($bp) {
			visibility: hidden;
			opacity: 0;
			transition: $speed visibility, $speed opacity;
			color: #a6a6a6;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate3d(-50%,-50%, 0);
			width: vmin(560px);
			text-align: center;
			@include normalize_padding;
			&.visible {
				visibility: visible;
				opacity: 1;
				transition-delay: $speed;
			}
		}
	}
}