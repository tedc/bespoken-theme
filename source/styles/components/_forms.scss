$error: #d0043c;
%inputs {
	background-color: $w;
	border: 0;
	width: $f;
	font-size: $font-size;
	color: $gray;
	padding: 0 em(20px, $font-size);
	display: block;
	@include appearance(none);
	@include input-placeholder {
		font-size: 1em;
		font-family: $main-font;
		color: $gray;
	}
	&.ng-invalid.ng-touched {
		color: $error;
		background-color: lighten($error, 60%);
		@include input-placeholder {
			color: $error;
		}
	}
}

input {
	&[type="email"], &[type="text"], &[type="tel"] {
		@extend %inputs;
		height: em(50px, $font-size);
		line-height: em(50px, $font-size);
	}
	&[type="checkbox"] {
		display: none;
		& + .form-label {
			width: $f;
			flex: 0 0 auto;
			display: flex;
			align-items: center;
			cursor: pointer;
			.check {
				flex: 0 0 auto;
				border-radius: em(25px, 12px);
				width: em(50px, 12px);
				height: em(25px, 12px);
				font-size: 12px;
				color: $gray;
				background-color: $light;
				text-align: center;
				display: flex;
				align-items: center;
				position: relative;
				transition: color $speed;
				margin-right: em(25px, 12px);
				&-text {
					flex: 1;
				}
			}
			.cursor {
				border-radius: em(17px, 12px);
				height: em(17px, 12px);
				top: em(4px, 12px);
				left: em(4px, 12px);
				right: em( 50px - 21px, 12px );
				box-shadow: 0 2px 5px transparentize($b, .65);
				position: absolute;
				display: block;
				overflow: hidden;
				z-index: 1;
				transition: left $speed/2, right $speed/2 $speed/2;
				&:before, &:after {
					content: '';
					transition: opacity $speed;
					@include absfull;
				}
				&:before {
					background: linear-gradient(to bottom, $gray, $gray-dark);
				}
				&:after {
					opacity: 0;
					background: linear-gradient(to bottom, $violet, $purple);
				}
			}
		}
		&:checked {
			& + .form-label {
				.check {
					color: $violet;
				}
				.cursor {
					transition: right $speed/2, left $speed/2 $speed/2;
					right: em(4px, 12px);
					left: em( 50px - 21px, 12px );
					&:after {
						opacity: 1;
					}
				}
			}
		}
	}
	&[type="file"] {
		width: 0;
		height: 0;
		opacity: 0;
		position: absolute;
		overflow: hidden;
		z-index: -1;
		& + label {
			display: flex;
			.file-text {
				@extend %inputs;
				height: em(50px, $font-size);
				line-height: em(50px, $font-size);
			 	width: percentage(( 321px - 126px )/321px);
			 	flex: 0 0 auto;
			 	white-space: nowrap;
			 	overflow: hidden;
			 	text-overflow: ellipsis;
			}
			.send-btn {
				flex: 0 0 auto;
				width: percentage(162px/321px);
				border-top-left-radius: 0;
				border-bottom-left-radius: 0;
				padding-right: em(60px, $font-size);
			}
		}
	}
}

textarea {
	@extend %inputs;
	padding-top: em(20px);
	line-height: 1.2;
	.modal-container & {
		height: em(125px, $font-size);
	}
	margin-top: em(25px);
	@include breakpoint($bp) {
		margin-top: 0;
	}
}

.form {
	display: flex;
	flex-wrap: wrap;
	.btn.close {
		border-color: $purple;
		&:after, &:before {
			border-color: $purple;
		}
		.btn-line {
			background-color: $purple;
		}
		@include breakpoint($bp) {
			border-color: $w;
			&:after, &:before {
				border-color: $w;
			}
			.btn-line {
				background-color: $w;
			}
		}
	}
	&-col {
		flex: 0 0 auto;
		width: $f;
		@include breakpoint($bp) {
			width: $f/2;	
			padding: {
	            left: em(25px);
	            right: em(25px);
	        }
		}
	}
	&-content, &-inputs {
		width: $f;
		display: flex;
		flex: 0 0 auto;
		flex-wrap: wrap;
		padding: {
	        left: 10px;
	        right: 10px;
	    }
	    .modal-container & {
	    	padding-top: em(150px) !important;
	    	padding-bottom: em(150px) !important;
	    }
	    @include breakpoint(640px){
	        padding: {
	            left: em(25px);
	            right: em(25px);
	        }
	    }
	}
	&-content {
		background-color: $light;
		@include breakpoint($bp) {
			width: $f/3;
		}
		p {
			padding-bottom: em(50px, 18px);
		}
		a {
			color: $purple;
			font-weight: 500;
			&:hover {
				color: $violet;
			}
		}
		[class^="icon"], [class*=" icon"] {
			font-size: 20px;
			margin-right: 20px;
			font-weight: normal;
		}
	}
	&-inputs {
		background-color: $anthracite;
		color: $light;
		align-content: flex-start;
		@include breakpoint($bp) {
			width: ($f/3) * 2;
		}
	}
	&-row {
		padding-bottom: em(25px);
	}
	&-label {
		padding-bottom: em(25px);
		&-text {
			font-size: 12px;
		}
	}
}

.acceptance {
	padding-top: em(25px);
	@include breakpoint($bp) {
		padding: {
        	top: em(50px);
            left: em(25px);
            right: em(25px);
        }
    }
}

.btn-send {
	border-radius: em(25px);
	color: $w;
	font-size: $font-size;
	height: em(50px, $font-size);
	line-height: em(50px, $font-size);
	overflow: hidden;
	position: relative;
	border: 0;
	width: $f;
	text-transform: uppercase;
	display: block;
	z-index: 1;
	font-weight: bold;
	box-shadow: 0 5px 10px transparentize($b, .75);
	transition: box-shadow $speed, background-position $speed;
	padding: 0;
	cursor: pointer;
	@include appearance(none);
	@include gradient;
	.btn {
		position: absolute;
		right: em(3px, $font-size);
		top: em(3px, $font-size);
		min-width: em(44px, $font-size);	
		min-height: em(44px, $font-size);
	}
	&:hover {
		box-shadow: 0 2px 5px transparentize($b, .5);
		background-position: 50% 100%;
	}
}